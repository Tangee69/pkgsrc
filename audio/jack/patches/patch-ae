$NetBSD: patch-ae,v 1.2 2008/11/16 11:22:55 bjs Exp $

This is currently untested.  Please file a PR if there are any problems.

--- tools/netsource.c.orig	2008-11-11 17:36:30.000000000 -0500
+++ tools/netsource.c
@@ -215,10 +215,11 @@ process (jack_nframes_t nframes, void *a
 
     /* ---------- Receive ---------- */
     if (reply_port)
-        size = netjack_recv (insockfd, (char *) packet_buf, rx_bufsize, MSG_DONTWAIT, mtu);
+        size = netjack_recv (insockfd, (char *) packet_buf, rx_bufsize, NULL, mtu);
     else
-        size = netjack_recv (outsockfd, (char *) packet_buf, rx_bufsize, MSG_DONTWAIT, mtu);
+        size = netjack_recv (outsockfd, (char *) packet_buf, rx_bufsize, NULL, mtu);
     packet_header_ntoh (pkthdr);
+
     /* Loop till we get the right packet at the right momment */
     while (size == rx_bufsize && (framecnt - pkthdr->framecnt) > latency)
     {
@@ -226,9 +227,9 @@ process (jack_nframes_t nframes, void *a
         //printf ("Frame %d  \tLate packet received with a latency of %d frames\n", framecnt, framecnt - pkthdr->framecnt);
 
         if (reply_port)
-            size = netjack_recv (insockfd, (char *) packet_buf, rx_bufsize, MSG_DONTWAIT, mtu);
+            size = netjack_recv (insockfd, (char *) packet_buf, rx_bufsize, NULL, mtu);
         else
-            size = netjack_recv (outsockfd, (char *) packet_buf, rx_bufsize, MSG_DONTWAIT, mtu);
+            size = netjack_recv (outsockfd, (char *) packet_buf, rx_bufsize, NULL, mtu);
         packet_header_ntoh (pkthdr);
     }
 
@@ -376,6 +377,7 @@ main (int argc, char *argv[])
     int peer_port = 3000;
     jack_options_t options = JackNullOption;
     jack_status_t status;
+    int ff;
 
     /* Torben's famous state variables, aka "the reporting API" ! */
     int statecopy_connected, statecopy_latency, statecopy_netxruns;
@@ -481,6 +483,11 @@ main (int argc, char *argv[])
         return 1;
     }
 
+    fcntl(outsockfd, F_GETFL, &ff);
+    fcntl(outsockfd, F_SETFL, ff | O_NONBLOCK);
+    fcntl(insockfd, F_GETFL, &ff);
+    fcntl(insockfd, F_SETFL, ff | O_NONBLOCK);
+
     /* Set up jack callbacks */
     jack_set_process_callback (client, process, 0);
     jack_set_sync_callback (client, sync_cb, 0);
