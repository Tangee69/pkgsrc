$NetBSD: patch-src_Makefile,v 1.3 2023/10/20 09:53:38 adam Exp $

Append to CFLAGS and LDFLAGS.

Fix the makefile to not choke on parallel builds.

--- src/Makefile.orig	2023-05-21 14:16:39.000000000 +0000
+++ src/Makefile
@@ -153,8 +153,8 @@ SYS_LDFLAGS := $(shell echo $(SYS_LDFLAG
 OPTIONS = -O2 -Wall
 endif
 
-CFLAGS = $(OPTIONS) $(ANALYZE) $(SYS_CFLAGS)  $(EXTRA_CFLAGS) $(CONFIG)
-LDFLAGS =           $(ANALYZE) $(SYS_LDFLAGS) $(EXTRA_LDFLAGS)
+CFLAGS += $(OPTIONS) $(ANALYZE) $(SYS_CFLAGS)  $(EXTRA_CFLAGS) $(CONFIG)
+LDFLAGS +=           $(ANALYZE) $(SYS_LDFLAGS) $(EXTRA_LDFLAGS)
 
 
 SRCS =	main.c		\
@@ -262,7 +262,14 @@ GRAPHICS_DIR = ../graphics
 # build targets
 # -----------------------------------------------------------------------------
 
-all: $(AUTOCONF) libgame_dir game_em_dir game_sp_dir game_mm_dir $(PROGNAME) graphics_dir
+# since gmake has no .WAIT the only option is to serialize fully
+#all: $(AUTOCONF) libgame_dir game_em_dir game_sp_dir game_mm_dir $(PROGNAME) graphics_dir
+all:
+	$(MAKE) $(AUTOCONF)
+	$(MAKE) libgame_dir
+	$(MAKE) game_em_dir game_sp_dir game_mm_dir
+	$(MAKE) $(PROGNAME)
+	$(MAKE)  graphics_dir
 
 $(PROGNAME): $(RNDLIBS) $(TIMESTAMP_FILE) $(COMMIT_HASH_FILE) $(OBJS) $(ICON)
 	$(CC) $(OBJS) $(ICON) $(RNDLIBS) $(LDFLAGS) -o $(PROGNAME)
