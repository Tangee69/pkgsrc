$NetBSD: patch-cs,v 1.3 2008/08/03 22:43:39 spz Exp $

--- src/RtConfig/f_cisco.cc.orig	2007-01-23 01:45:16.000000000 +0100
+++ src/RtConfig/f_cisco.cc
@@ -746,39 +746,39 @@ void CiscoConfig::printRE(ostream &s, 
 
    //int lineLen = strlen(out.str());
    int lineLen = out.str().length();
+   const char *p = out.str().c_str();
+
    if (lineLen < 240 && ! hasTilda) {
-      const char *p = out.str().c_str();
       for (char *q = strchr(p, '@'); q; q = strchr(q, '@'))
 	 *q = '(';
-      s << out.str();
+      s << p;
    } else { // need to split into multiple lines
       if (hasTilda) {
-	 const char *p = out.str().c_str();
 	 for (char *q = strchr(p, '@'); q; q = strchr(q, '@'))
 	    *q = '(';
 	 for (char *q = strchr(p, '&'); q; q = strchr(q, '&'))
 	    *q = '@';
       }
 
-      char *p = strdup(out.str().c_str());
-      char *q, *r2;
+      char *q, *q2;
       char *r = NULL;
       int size = 0;
-      for (p = strchr(p, '@'); p; p = strchr(p, '@')) {
-	 q = strchr(p, ')');
-	 if (q - p > size) {
-	    r = p;
-	    size = q - p;
+      for (q = strchr(p, '@'); q; q = strchr(q, '@')) {
+	 q2 = strchr(q, ')');
+	 if (q2 - q > size) {
+	    r = q;
+	    size = q2 - q;
 	 }
-	 *p = '(';
-	 p = q;
+	 *q = '(';
+	 q = q2;
       }
       if (!r) {
 	 s << out.str();
 	 cerr << "Warning: ip as-path access-list is too long for cisco to handle" << endl;
       } else {
-	 int inc = hasTilda ? 1 : (240 - lineLen + size) >? 5;
-	 p = strdup(out.str().c_str());
+         char *r2;
+	 int inc = hasTilda ? 1 : 
+		( ( (240 - lineLen + size) > 5 ) ? (240 - lineLen + size) : 5 );
 	 q = strchr(r, ')') + 1;
 	 *r = 0;
 	 r++;
@@ -1246,8 +1246,28 @@ bool CiscoConfig::printNeighbor(int impo
      cout << " neighbor "   << neighbor << " remote-as " << peerAS << "\n";
 
    if (afi_activate && !peerGroup) {
-     cout << " address-family " << (AddressFamily &) *filter_afi << endl;
-     cout << indent <<" neighbor " << neighbor << " activate\n"; 
+     if (strcmp(filter_afi->name(),"ipv6") == 0) {
+       cout << " address-family " << "ipv4" << endl;
+       cout << indent <<" no neighbor " << neighbor << " activate\n"; 
+       cout << " address-family " << "ipv6 unicast" << endl;
+       cout << indent <<" neighbor " << neighbor << " activate\n"; 
+       cout << " address-family " << "ipv6 multicast" << endl;
+       cout << indent <<" neighbor " << neighbor << " activate\n"; 
+     } else if (strcmp(filter_afi->name(),"ipv6.unicast") == 0) {
+       cout << " address-family " << "ipv4" << endl;
+       cout << indent <<" no neighbor " << neighbor << " activate\n"; 
+       cout << " address-family " << "ipv6 unicast" << endl;
+       cout << indent <<" neighbor " << neighbor << " activate\n"; 
+     } else if (strcmp(filter_afi->name(),"ipv4.multicast") == 0) {
+       cout << " address-family " << "ipv4 multicast" << endl;
+       cout << indent <<" neighbor " << neighbor << " activate\n"; 
+     } else if (strcmp(filter_afi->name(),"ipv6.multicast") == 0) {
+       cout << " address-family " << "ipv4" << endl;
+       cout << indent <<" no neighbor " << neighbor << " activate\n"; 
+       cout << " address-family " << "ipv6 multicast" << endl;
+       cout << indent <<" neighbor " << neighbor << " activate\n"; 
+     }
+     // ought to handle afi any too, but that's not just done by naming it here
    }
 
    if (routeMapGenerated) 
