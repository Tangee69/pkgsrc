$NetBSD: patch-meson.build,v 1.3 2025/01/12 16:13:10 hauke Exp $

Make PREFIX path configurable.

While NetBSD has libwrap, the meson code doesn't find it. The test
cond still succeeds, so add a branch that does not require the
library.

Install at.h on Linux, we do it on NetBSD, too.

--- meson.build.orig	2024-11-15 06:52:12.000000000 +0000
+++ meson.build
@@ -169,7 +169,7 @@ elif host_os == 'netbsd'
         'include',
         'sys',
         'etc/afpd',
-        '/usr/pkg/include',
+        get_option('prefix') / 'include',
     )
 elif host_os == 'omnios'
     root_includes = include_directories(
@@ -219,7 +219,7 @@ if host_os in ['dragonfly', 'freebsd', '
 endif
 
 if host_os == 'netbsd'
-    libsearch_dirs += '/usr/pkg/lib'
+    libsearch_dirs += get_option('prefix') / 'lib'
 endif
 
 if uname.found() and uname_stdout.to_lower().contains('omnios')
@@ -2010,7 +2010,11 @@ int main(void) {
 }
 '''
 
-    have_tcpwrap = wrap.found() and cc.links(tcpwrap_code, args: '-lwrap')
+    # *BSD have tcpwrappers support in libc
+    have_tcpwrap = wrap.found() and cc.links(tcpwrap_code)
+    if not have_tcpwrap
+	have_tcpwrap = wrap.found() and cc.links(tcpwrap_code, args: '-lwrap')
+    endif
     if not have_tcpwrap
         have_tcpwrap = cc.links(tcpwrap_code, args: ['-lwrap', '-lnsl'])
     endif
@@ -2077,7 +2081,6 @@ if host_os.contains('freebsd')
     cdata.set('FREEBSD', 1)
     cdata.set('OPEN_NOFOLLOW_ERRNO', 'EMLINK')
 elif host_os.contains('linux')
-    use_glibc_at_header = cc.has_header('netatalk/at.h')
     cdata.set('_GNU_SOURCE', 1)
     if cc.compiles(
         '''
