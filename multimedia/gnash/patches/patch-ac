$NetBSD: patch-ac,v 1.1 2008/07/07 08:34:55 abs Exp $

--- server/as_value.h.orig	2008-05-05 22:02:01.000000000 +0100
+++ server/as_value.h
@@ -65,6 +65,9 @@ class asName;
 // The following template works just like its C counterpart, with added
 // type safety (i.e., they will only compile for floating point arguments).
 
+#ifdef isnan
+# undef isnan
+#endif /* isnan */
 template <typename T>
 inline bool
 isnan(const T& num, typename boost::enable_if<boost::is_floating_point<T> >::type* dummy = 0)
@@ -73,6 +76,9 @@ isnan(const T& num, typename boost::enab
 	return num != num;
 }
 
+#ifdef isinf
+# undef isinf
+#endif /* isinf */
 #define isinf(x) (isnan(x - x))
 
 /// Use this methods to obtain a properly-formatted property name
