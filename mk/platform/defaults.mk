# $NetBSD: defaults.mk,v 1.1 2007/10/18 21:52:24 rillig Exp $
#
# This file contains the default values for variables that depend on the
# base system. It should be included from mk/platform/${OPSYS}.mk after
# setting the values that differ from the ones mentioned here.
#

_VARGROUPS+=	platform
_SYS_VARS.platform=	PKGLOCALEDIR CPP_PRECOMP_FLAGS DEF_UMASK	\
	NOLOGIN PKG_TOOLS_BIN IMAKE_MAKE

# On some systems, locale files are in lib/locale, on other systems they
# are in share/locale. The latter is more popular.
#
# Keywords: locale
#
PKGLOCALEDIR?=		share

# XXX: why aren't these in tools/${OPSYS}.mk?
#CPP
#ECHO_N
#IMAKE_MAKE
#PS
#SU
#TYPE
#USERADD
#GROUPADD

# XXX: Is this variable really necessary? It should be possible to
# embed these flags into CPP for Darwin.
CPP_PRECOMP_FLAGS?=	# none

# A sensible value for umask. This is only used in the install phase for
# emitting a warning, since some packages install their files using cp(1).
#
# Keywords: umask
#
DEF_UMASK?=		0022

#EXPORT_SYMBOLS_LDFLAGS
#MOTIF_TYPE_DEFAULT

# The program that is run when a user manages to login to an account that
# has not been intended for interactive use. If your operating system
# provides a special command for this purpose, you can use that.
#
# XXX: Shouldn't this always be an absolute path?
#
NOLOGIN?=		${FALSE}

# The directory where the tools for managing binary packages can be
# found.
#
PKG_TOOLS_BIN?=		${LOCALBASE}/sbin

#ROOT_CMD?=		${SU} - root -c
#ROOT_USER?=		root
#ROOT_GROUP?=	wheel

# Some packages need more resources than usual for building.
#
# See also: UNLIMIT_RESOURCES
#
ULIMIT_CMD_datasize?=	ulimit -d `ulimit -H -d`
ULIMIT_CMD_stacksize?=	ulimit -s `ulimit -H -s`
ULIMIT_CMD_memorysize?=	ulimit -m `ulimit -H -m`

# The Makefiles generated by imake are so simple that it usually doesn't
# matter which make(1) utility is used for them. So we just take our
# bmake as default.
#
IMAKE_MAKE?=		${MAKE}

# TODO: Describe the other imake things.
#
# Keywords: imake
#
#IMAKE_MAN_SOURCE_PATH=	man/cat
#IMAKE_MANNEWSUFFIX=	0
#IMAKE_MAN_SUFFIX=	1
#IMAKE_LIBMAN_SUFFIX=	3
#IMAKE_KERNMAN_SUFFIX=	${IMAKE_MANNEWSUFFIX}
#IMAKE_FILEMAN_SUFFIX=	5
#IMAKE_GAMEMAN_SUFFIX=	${IMAKE_MANNEWSUFFIX}
#IMAKE_MISCMAN_SUFFIX=	${IMAKE_MANNEWSUFFIX}
#IMAKE_MAN_DIR=		${IMAKE_MAN_SOURCE_PATH}1
#IMAKE_LIBMAN_DIR=	${IMAKE_MAN_SOURCE_PATH}3
#IMAKE_KERNMAN_DIR=	${IMAKE_MAN_SOURCE_PATH}4
#IMAKE_FILEMAN_DIR=	${IMAKE_MAN_SOURCE_PATH}5
#IMAKE_GAMEMAN_DIR=	${IMAKE_MAN_SOURCE_PATH}6
#IMAKE_MISCMAN_DIR=	${IMAKE_MAN_SOURCE_PATH}7
#IMAKE_MANINSTALL?=	maninstall catinstall

# Some operating systems provide emulation for binaries of other
# operating systems. See mk/emulator/README for more details.
#
#_OPSYS_EMULDIR.*

#_OPSYS_HAS_INET6
#_OPSYS_HAS_JAVA=	no	# Java is not standard
#_OPSYS_HAS_MANZ=	yes	# MANZ controls gzipping of man pages
#_OPSYS_HAS_OSSAUDIO=	yes	# libossaudio is available
#_OPSYS_PERL_REQD=		# no base version of perl required
#_OPSYS_PTHREAD_AUTO=	no	# -lpthread needed for pthreads
#_OPSYS_SHLIB_TYPE=	ELF/a.out	# shared lib type
#_PATCH_CAN_BACKUP=	yes	# native patch(1) can make backups
#_PATCH_BACKUP_ARG?=	-V simple -b 	# switch to patch(1) for backup suffix
#_USE_RPATH=		yes	# add rpath to LDFLAGS

# flags passed to the linker to extract all symbols from static archives.
# this is GNU ld.
#_OPSYS_WHOLE_ARCHIVE_FLAG=	-Wl,--whole-archive
#_OPSYS_NO_WHOLE_ARCHIVE_FLAG=	-Wl,--no-whole-archive

# The option to the C compiler for stripping.
# XXX: Is this also used for the other compilers?
# XXX: This should be the plain option and not depend on _INSTALL_UNSTRIPPED.
#
_STRIPFLAG_CC?=		${_INSTALL_UNSTRIPPED:D:U-s}

# The install(1) option to strip the installed files.
# XXX: This should be the plain option and not depend on _INSTALL_UNSTRIPPED.
#
_STRIPFLAG_INSTALL?=	${_INSTALL_UNSTRIPPED:D:U-s}	# install(1) option to strip

#DEFAULT_SERIAL_DEVICE
#SERIAL_DEVICES

#PKG_HAVE_KQUEUE

# check for maximum command line length and set it in configure's environment,
# to avoid a test required by the libtool script that takes forever.
#_OPSYS_MAX_CMDLEN_CMD=	/sbin/sysctl -n kern.argmax
