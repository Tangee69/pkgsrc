$NetBSD: patch-ad,v 1.1 2008/03/17 15:59:05 kristerw Exp $

--- configure.orig	2008-03-16 23:52:02.000000000 +0000
+++ configure	2008-03-16 23:52:07.000000000 +0000
@@ -3273,11 +3273,28 @@
 EOF
 
 else
-  { echo "$as_me:$LINENO: result: failed" >&5
-echo "${ECHO_T}failed" >&6; }
-       { { echo "$as_me:$LINENO: error: Couldnt figure out how to call GHC.Handle.openFd!" >&5
-echo "$as_me: error: Couldnt figure out how to call GHC.Handle.openFd!" >&2;}
-   { (exit 1); exit 1; }; }
+  { echo "$as_me:$LINENO: result: okay" >&5
+echo "${ECHO_T}okay" >&6; }
+
+cat << \EOF >> Workaround.hs.beginning
+
+import qualified GHC.Handle ( fdToHandle' )
+import System.IO ( Handle, IOMode )
+import System.Posix.Internals ( FDType )
+import qualified GHC.IOBase ( FD )
+
+EOF
+
+
+cat << \EOF >> Workaround.hs.ending
+
+  {-
+   Work around change in the GHC.Handle.fdToHandle' API.
+  -}
+openFd :: GHC.IOBase.FD -> Maybe FDType -> FilePath -> IOMode -> Bool -> Bool -> IO Handle
+openFd fd x y z a b = GHC.Handle.fdToHandle' fd x b y z a
+
+EOF
 
 fi
 
@@ -3286,11 +3303,28 @@
   cat conftest.hs >&5
   echo "end of failed program." >&5
  rm -f Main.hi Main.o
-  { echo "$as_me:$LINENO: result: failed" >&5
-echo "${ECHO_T}failed" >&6; }
-       { { echo "$as_me:$LINENO: error: Couldnt figure out how to call GHC.Handle.openFd!" >&5
-echo "$as_me: error: Couldnt figure out how to call GHC.Handle.openFd!" >&2;}
-   { (exit 1); exit 1; }; }
+  { echo "$as_me:$LINENO: result: okay" >&5
+echo "${ECHO_T}okay" >&6; }
+
+cat << \EOF >> Workaround.hs.beginning
+
+import qualified GHC.Handle ( fdToHandle' )
+import System.IO ( Handle, IOMode )
+import System.Posix.Internals ( FDType )
+import qualified GHC.IOBase ( FD )
+
+EOF
+
+
+cat << \EOF >> Workaround.hs.ending
+
+  {-
+   Work around change in the GHC.Handle.fdToHandle' API.
+  -}
+openFd :: GHC.IOBase.FD -> Maybe FDType -> FilePath -> IOMode -> Bool -> Bool -> IO Handle
+openFd fd x y z a b = GHC.Handle.fdToHandle' fd x b y z a
+
+EOF
 
 fi
 
@@ -3353,11 +3387,28 @@
 EOF
 
 else
-  { echo "$as_me:$LINENO: result: failed" >&5
-echo "${ECHO_T}failed" >&6; }
-       { { echo "$as_me:$LINENO: error: Couldnt figure out how to call GHC.Handle.openFd!" >&5
-echo "$as_me: error: Couldnt figure out how to call GHC.Handle.openFd!" >&2;}
-   { (exit 1); exit 1; }; }
+  { echo "$as_me:$LINENO: result: okay" >&5
+echo "${ECHO_T}okay" >&6; }
+
+cat << \EOF >> Workaround.hs.beginning
+
+import qualified GHC.Handle ( fdToHandle' )
+import System.IO ( Handle, IOMode )
+import System.Posix.Internals ( FDType )
+import qualified GHC.IOBase ( FD )
+
+EOF
+
+
+cat << \EOF >> Workaround.hs.ending
+
+  {-
+   Work around change in the GHC.Handle.fdToHandle' API.
+  -}
+openFd :: GHC.IOBase.FD -> Maybe FDType -> FilePath -> IOMode -> Bool -> Bool -> IO Handle
+openFd fd x y z a b = GHC.Handle.fdToHandle' fd x b y z a
+
+EOF
 
 fi
 
@@ -3366,11 +3417,28 @@
   cat conftest.hs >&5
   echo "end of failed program." >&5
  rm -f Main.hi Main.o
-  { echo "$as_me:$LINENO: result: failed" >&5
-echo "${ECHO_T}failed" >&6; }
-       { { echo "$as_me:$LINENO: error: Couldnt figure out how to call GHC.Handle.openFd!" >&5
-echo "$as_me: error: Couldnt figure out how to call GHC.Handle.openFd!" >&2;}
-   { (exit 1); exit 1; }; }
+  { echo "$as_me:$LINENO: result: okay" >&5
+echo "${ECHO_T}okay" >&6; }
+
+cat << \EOF >> Workaround.hs.beginning
+
+import qualified GHC.Handle ( fdToHandle' )
+import System.IO ( Handle, IOMode )
+import System.Posix.Internals ( FDType )
+import qualified GHC.IOBase ( FD )
+
+EOF
+
+
+cat << \EOF >> Workaround.hs.ending
+
+  {-
+   Work around change in the GHC.Handle.fdToHandle' API.
+  -}
+openFd :: GHC.IOBase.FD -> Maybe FDType -> FilePath -> IOMode -> Bool -> Bool -> IO Handle
+openFd fd x y z a b = GHC.Handle.fdToHandle' fd x b y z a
+
+EOF
 
 fi
 
