$NetBSD: patch-configure.ac,v 1.1 2024/05/27 23:27:10 riastradh Exp $

Fix cross-build.
https://github.com/NetBSDfr/pkgin/issues/133
https://github.com/NetBSDfr/pkgin/issues/134

--- configure.ac.orig	2023-08-22 07:12:21.000000000 +0000
+++ configure.ac
@@ -42,22 +42,20 @@ AC_ARG_WITH([libarchive],
 	[AS_HELP_STRING([--with-libarchive=DIR],
 		[Root libarchive directory (e.g. /usr/local)])],
 	[
-		AS_IF([test "x$withval" = "x" || ! test -d "$withval"],
-			AC_MSG_ERROR([Invalid --with-libarchive directory]))
-		AC_MSG_CHECKING([for $withval/include/archive.h])
-		AS_IF([test -f "$withval/include/archive.h"], [
-			LIBARCHIVE_INCLUDES="-I$withval/include"
-			LIBARCHIVE_LDFLAGS="-L$withval/lib"
-			LIBARCHIVE_LIBS="-larchive"
-			AC_MSG_RESULT([yes])
-		],[
-			AC_MSG_RESULT([not found])
-			AC_MSG_ERROR([Could not find libarchive])
-		])
-	],[
-		AC_MSG_ERROR([--with-libarchive is mandatory])
+		LIBARCHIVE_INCLUDES="-I$withval/include"
+		LIBARCHIVE_LDFLAGS="-L$withval/lib"
+		LIBARCHIVE_LIBS="-larchive"
 	]
 )
+CPPFLAGS_save=$CPPFLAGS; CPPFLAGS="$CPPFLAGS $LIBARCHIVE_INCLUDES"
+LDFLAGS_save=$LDFLAGS; LDFLAGS="$LDFLAGS $LIBARCHIVE_LDFLAGS"
+LIBS_save=$LIBS; LIBS="$LIBS $LIBARCHIVE_LIBS"
+AC_CHECK_HEADER([archive.h],[],[AC_MSG_FAILURE([can't find archive.h])])
+AC_CHECK_LIB([archive],[archive_read_new],[],
+	[AC_MSG_FAILURE([can't find libarchive])])
+CPPFLAGS=$CPPFLAGS_save
+LDFLAGS=$LDFLAGS_save
+LIBS=$LIBS_save
 AC_SUBST([LIBARCHIVE_INCLUDES])
 AC_SUBST([LIBARCHIVE_LDFLAGS])
 AC_SUBST([LIBARCHIVE_LIBS])
@@ -66,22 +64,20 @@ AC_ARG_WITH([libfetch],
 	[AS_HELP_STRING([--with-libfetch=DIR],
 		[Root libfetch directory (e.g. /usr/local)])],
 	[
-		AS_IF([test "x$withval" = "x" || ! test -d "$withval"],
-			AC_MSG_ERROR([Invalid --with-libfetch directory]))
-		AC_MSG_CHECKING([for $withval/include/fetch.h])
-		AS_IF([test -f "$withval/include/fetch.h"], [
-			LIBFETCH_INCLUDES="-I$withval/include"
-			LIBFETCH_LDFLAGS="-L$withval/lib"
-			LIBFETCH_LIBS="-lfetch"
-			AC_MSG_RESULT([yes])
-		],[
-			AC_MSG_RESULT([no])
-			AC_MSG_ERROR([Could not find libfetch])
-		])
-	],[
-		AC_MSG_ERROR([--with-libfetch is mandatory])
+		LIBFETCH_INCLUDES="-I$withval/include"
+		LIBFETCH_LDFLAGS="-L$withval/lib"
+		LIBFETCH_LIBS="-lfetch"
 	]
 )
+CPPFLAGS_save=$CPPFLAGS; CPPFLAGS="$CPPFLAGS $LIBFETCH_INCLUDES"
+LDFLAGS_save=$LDFLAGS; LDFLAGS="$LDFLAGS $LIBFETCH_LDFLAGS"
+LIBS_save=$LIBS; LIBS="$LIBS $LIBFETCH_LIBS"
+AC_CHECK_HEADER([fetch.h],[],[AC_MSG_FAILURE([can't find fetch.h])])
+AC_CHECK_LIB([fetch],[fetchMakeURL],[],
+	[AC_MSG_FAILURE([can't find libfetch])])
+CPPFLAGS=$CPPFLAGS_save
+LDFLAGS=$LDFLAGS_save
+LIBS=$LIBS_save
 AC_SUBST([LIBFETCH_INCLUDES])
 AC_SUBST([LIBFETCH_LDFLAGS])
 AC_SUBST([LIBFETCH_LIBS])
@@ -90,22 +86,21 @@ AC_ARG_WITH([openssl],
 	[AS_HELP_STRING([--with-openssl=DIR],
 		[Root openssl directory (e.g. /usr/local)])],
 	[
-		AS_IF([test "x$withval" = "x" || ! test -d "$withval"],
-			AC_MSG_ERROR([Invalid --with-openssl directory]))
-		AC_MSG_CHECKING([for $withval/include/openssl/ssl.h])
-		AS_IF([test -f "$withval/include/openssl/ssl.h"], [
-			OPENSSL_INCLUDES="-I$withval/include"
-			OPENSSL_LDFLAGS="-L$withval/lib"
-			OPENSSL_LIBS="-lssl -lcrypto"
-			AC_MSG_RESULT([yes])
-		],[
-			AC_MSG_RESULT([no])
-			AC_MSG_ERROR([Could not find openssl])
-		])
-	],[
-		AC_MSG_ERROR([--with-openssl is mandatory])
+		OPENSSL_INCLUDES="-I$withval/include"
+		OPENSSL_LDFLAGS="-L$withval/lib"
+		OPENSSL_LIBS="-lssl -lcrypto"
 	]
 )
+CPPFLAGS_save=$CPPFLAGS; CPPFLAGS="$CPPFLAGS $OPENSSL_INCLUDES"
+LDFLAGS_save=$LDFLAGS; LDFLAGS="$LDFLAGS $OPENSSL_LDFLAGS"
+LIBS_save=$LIBS; LIBS="$LIBS $OPENSSL_LIBS"
+AC_CHECK_HEADER([openssl/ssl.h],[],
+	[AC_MSG_FAILURE([can't find openssl/ssl.h])])
+AC_CHECK_LIB([ssl],[SSL_CTX_new],[],
+	[AC_MSG_FAILURE([can't find libssl])])
+CPPFLAGS=$CPPFLAGS_save
+LDFLAGS=$LDFLAGS_save
+LIBS=$LIBS_save
 AC_SUBST([OPENSSL_INCLUDES])
 AC_SUBST([OPENSSL_LDFLAGS])
 AC_SUBST([OPENSSL_LIBS])
@@ -114,22 +109,20 @@ AC_ARG_WITH([sqlite3],
 	[AS_HELP_STRING([--with-sqlite3=DIR],
 		[Root sqlite3 directory (e.g. /usr/local)])],
 	[
-		AS_IF([test "x$withval" = "x" || ! test -d "$withval"],
-			AC_MSG_ERROR([Invalid --with-sqlite3 directory]))
-		AC_MSG_CHECKING([for $withval/include/sqlite3.h])
-		AS_IF([test -f "$withval/include/sqlite3.h"], [
-			SQLITE3_INCLUDES="-I$withval/include"
-			SQLITE3_LDFLAGS="-L$withval/lib"
-			SQLITE3_LIBS="-lsqlite3"
-			AC_MSG_RESULT([yes])
-		],[
-			AC_MSG_RESULT([no])
-			AC_MSG_ERROR([Could not find sqlite3])
-		])
-	],[
-		AC_MSG_ERROR([--with-sqlite3 is mandatory])
+		SQLITE3_INCLUDES="-I$withval/include"
+		SQLITE3_LDFLAGS="-L$withval/lib"
+		SQLITE3_LIBS="-lsqlite3"
 	]
 )
+CPPFLAGS_save=$CPPFLAGS; CPPFLAGS="$CPPFLAGS $SQLITE3_INCLUDES"
+LDFLAGS_save=$LDFLAGS; LDFLAGS="$LDFLAGS $SQLITE3_LDFLAGS"
+LIBS_save=$LIBS; LIBS="$LIBS $SQLITE3_LIBS"
+AC_CHECK_HEADER([sqlite3.h],[],[AC_MSG_FAILURE([can't find sqlite3.h])])
+AC_CHECK_LIB([sqlite3],[sqlite3_open_v2],[],
+	[AC_MSG_FAILURE([can't find libsqlite3])])
+CPPFLAGS=$CPPFLAGS_save
+LDFLAGS=$LDFLAGS_save
+LIBS=$LIBS_save
 AC_SUBST([SQLITE3_INCLUDES])
 AC_SUBST([SQLITE3_LDFLAGS])
 AC_SUBST([SQLITE3_LIBS])
@@ -152,16 +145,7 @@ AC_ARG_WITH([pkg-install],
 	[AS_HELP_STRING([--with-pkg-install=DIR],
 		[Path to pkg_install commands (e.g. /usr/pkg/sbin)])],
 	[
-		AS_IF([test "x$withval" = "x" || ! test -d "$withval"],
-			AC_MSG_ERROR([Invalid --with-pkg-install directory]))
-		AC_MSG_CHECKING([for $withval/pkg_admin])
-		AS_IF([test -x "$withval/pkg_admin"], [
-			PKG_INSTALL_DIR="$withval"
-			AC_MSG_RESULT([yes])
-		],[
-			AC_MSG_RESULT([no])
-			AC_MSG_ERROR([Could not find pkg_install])
-		])
+		PKG_INSTALL_DIR="$withval"
 	],[
 		AC_MSG_ERROR([--with-pkg-install is mandatory])
 	]
