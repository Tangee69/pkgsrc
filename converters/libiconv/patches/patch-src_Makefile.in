$NetBSD: patch-src_Makefile.in,v 1.1 2023/05/08 16:21:55 schmonz Exp $

Just use libtool normally (we're pkgsrc, we have wrappers). Fixes
pkg/57222.

--- src/Makefile.in.orig	2019-01-27 22:07:13.000000000 +0000
+++ src/Makefile.in
@@ -101,20 +101,9 @@ INSTALL_PROGRAM_ENV = @INSTALL_PROGRAM_E
 iconv_LDFLAGS = `if test -n '$(RELOCATABLE_LDFLAGS)'; then $(RELOCATABLE_LDFLAGS) $(bindir); fi`
 
 # During "make install", we can build the final iconv executable.
-# On HP-UX, in order to ensure that the new libiconv.sl will override the old
-# one that is hardcoded in libintl.sl, we need to mention libiconv.sl before
-# libintl.sl on the link command line. We have to bypass libtool in order to
-# achieve this.
-# On Solaris, the linker gives an error if we are using libintl.so and it
-# refers to a libiconv.so in $prefix/lib since then it sees two libiconv.so's,
-# one in $prefix/lib and one in ../lib/.libs. So we have to avoid using
-# ../lib/libiconv.la entirely.
 install : all force
 	if [ ! -d $(DESTDIR)$(bindir) ] ; then $(mkinstalldirs) $(DESTDIR)$(bindir) ; fi
-	case "@host_os@" in \
-	  hpux*) $(CC) $(LDFLAGS) $(CFLAGS) $(iconv_LDFLAGS) iconv.@OBJEXT@ ../srclib/libicrt.a -L$(DESTDIR)$(libdir) -liconv @LIBINTL@ $(OBJECTS_RES_@WOE32@) `if test -n '$(DESTDIR)'; then echo " -Wl,+b -Wl,$(libdir)"; fi` -o iconv$(EXEEXT);; \
-	  *) $(LIBTOOL_LINK) $(CC) $(LDFLAGS) $(CFLAGS) $(iconv_LDFLAGS) iconv.@OBJEXT@ ../srclib/libicrt.a $(DESTDIR)$(libdir)/libiconv.la @LTLIBINTL@ $(OBJECTS_RES_@WOE32@) -o iconv$(EXEEXT);; \
-	esac
+	$(LIBTOOL_LINK) $(CC) $(LDFLAGS) $(CFLAGS) $(iconv_LDFLAGS) iconv.@OBJEXT@ ../srclib/libicrt.a ../lib/libiconv.la @LTLIBINTL@ $(OBJECTS_RES_@WOE32@) -o iconv$(EXEEXT)
 	$(INSTALL_PROGRAM_ENV) $(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) iconv$(EXEEXT) $(DESTDIR)$(bindir)/iconv$(EXEEXT)
 
 install-strip : force
