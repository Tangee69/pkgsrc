$NetBSD: patch-ab,v 1.13 2008/08/15 12:15:17 wiz Exp $

--- dbus/dbus-sysdeps-unix.c.orig	2008-08-06 17:00:29.000000000 +0000
+++ dbus/dbus-sysdeps-unix.c
@@ -35,6 +35,9 @@
 #include "dbus-list.h"
 #include "dbus-credentials.h"
 
+#ifdef HAVE_NETBSD_ATOMIC_OPS
+#include <sys/atomic.h>
+#endif
 #include <sys/types.h>
 #include <stdlib.h>
 #include <string.h>
@@ -79,8 +82,8 @@
 #define O_BINARY 0
 #endif
 
-#ifndef _AI_ADDRCONFIG
-#define _AI_ADDRCONFIG 0
+#ifndef AI_ADDRCONFIG
+#define AI_ADDRCONFIG 0
 #endif
 
 #ifndef HAVE_SOCKLEN_T
@@ -1822,7 +1825,26 @@ _dbus_parse_uid (const DBusString      *
   return TRUE;
 }
 
+#ifdef HAVE_NETBSD_ATOMIC_OPS
+dbus_int32_t
+_dbus_atomic_inc (DBusAtomic *atomic)
+{
+	register dbus_int32_t old = atomic->value;
+
+	atomic_inc_uint((unsigned *)&atomic->value);
+	return old;
+}
+
+dbus_int32_t
+_dbus_atomic_dec (DBusAtomic *atomic)
+{
+	register dbus_int32_t old = atomic->value;
 
+	atomic_dec_uint((unsigned *)&atomic->value);
+  	return old;
+}
+_DBUS_DEFINE_GLOBAL_LOCK (atomic);
+#else
 _DBUS_DEFINE_GLOBAL_LOCK (atomic);
 
 #if DBUS_USE_ATOMIC_INT_486_COND
@@ -1887,6 +1909,7 @@ _dbus_atomic_dec (DBusAtomic *atomic)
   return res;
 #endif
 }
+#endif /* HAVE_NETBSD_ATOMIC_OPS */
 
 #ifdef DBUS_BUILD_TESTS
 /** Gets our GID
@@ -2780,8 +2803,18 @@ int
 _dbus_printf_string_upper_bound (const char *format,
                                  va_list     args)
 {
+#if defined(__hpux) || defined(__sgi)
+/* this code from libnbcompat's vsnprintf */
+  static FILE *devnull = 0;
+  if (!devnull) {
+    devnull = fopen("/dev/null", "w");
+    if (!devnull) return -1;
+  }
+  return vfprintf(devnull, format, args);
+#else
   char c;
   return vsnprintf (&c, 1, format, args);
+#endif
 }
 
 /**
