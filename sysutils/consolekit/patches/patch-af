$NetBSD: patch-af,v 1.1 2008/11/25 13:40:05 hasso Exp $

--- src/ck-sysdeps-freebsd.c.orig	2008-11-25 14:43:51 +0200
+++ src/ck-sysdeps-freebsd.c	2008-11-25 14:50:24 +0200
@@ -151,14 +151,38 @@ stat2proc (pid_t        pid,
                 return FALSE;
         }
 
+#ifdef __DragonFly__
+        num = MAXCOMLEN;
+#else
         num = OCOMMLEN;
+#endif
         if (num >= sizeof P->cmd) {
                 num = sizeof P->cmd - 1;
         }
 
+#ifdef __DragonFly__
+        memcpy (P->cmd, p.kp_comm, num);
+#else
         memcpy (P->cmd, p.ki_ocomm, num);
+#endif
 
         P->cmd[num]   = '\0';
+#ifdef __DragonFly__
+        P->pid        = p.kp_pid;
+        P->ppid       = p.kp_ppid;
+        P->pgrp       = p.kp_pgid;
+        P->session    = p.kp_sid;
+        P->rss        = p.kp_vm_rssize;
+        P->vsize      = p.kp_vm_map_size;
+        P->start_time = p.kp_start.tv_sec;
+        P->wchan      = (unsigned long) p.kp_lwp.kl_wchan;
+        P->state      = p.kp_stat;
+        P->nice       = p.kp_nice;
+        P->flags      = p.kp_flags;
+        P->tpgid      = p.kp_tpgid;
+        P->processor  = p.kp_lwp.kl_cpuid;
+        P->nlwp       = p.kp_nthreads;
+#else
         P->pid        = p.ki_pid;
         P->ppid       = p.ki_ppid;
         P->pgrp       = p.ki_pgid;
@@ -173,19 +197,33 @@ stat2proc (pid_t        pid,
         P->tpgid      = p.ki_tpgid;
         P->processor  = p.ki_oncpu;
         P->nlwp       = p.ki_numthreads;
+#endif
 
         /* we like it Linux-encoded :-) */
+#ifdef __DragonFly__
+        tty_maj = major (p.kp_tdev);
+        tty_min = minor (p.kp_tdev);
+#else
         tty_maj = major (p.ki_tdev);
         tty_min = minor (p.ki_tdev);
+#endif
         P->tty = DEV_ENCODE (tty_maj,tty_min);
 
         snprintf (P->tty_text, sizeof P->tty_text, "%3d,%-3d", tty_maj, tty_min);
 
+#ifdef __DragonFly__
+        if (p.kp_tdev != NODEV && (ttname = devname (p.kp_tdev, S_IFCHR)) != NULL) {
+#else
         if (p.ki_tdev != NODEV && (ttname = devname (p.ki_tdev, S_IFCHR)) != NULL) {
+#endif
                 memcpy (P->tty_text, ttname, sizeof P->tty_text);
         }
 
+#ifdef __DragonFly__
+        if (p.kp_tdev == NODEV) {
+#else
         if (p.ki_tdev == NODEV) {
+#endif
                 memcpy (P->tty_text, "   ?   ", sizeof P->tty_text);
         }
 
@@ -308,7 +346,11 @@ ck_unix_pid_get_uid (pid_t pid)
         res = get_kinfo_proc (pid, &p);
 
         if (res) {
+#ifdef __DragonFly__
+                uid = p.kp_uid;
+#else
                 uid = p.ki_uid;
+#endif
         }
 
         return uid;
