$NetBSD: patch-erlang17,v 1.1 2015/07/17 14:25:42 fhajny Exp $

Patch to build with Erlang 17/18 based on FreeBSD ports.

https://svnweb.freebsd.org/ports/head/net-im/ejabberd/files/patch-erlang-17-dict-queue?revision=390878&view=co

--- ../deps/esip/src/esip_listener.erl.orig
+++ ../deps/esip/src/esip_listener.erl
@@ -37,7 +37,11 @@
 
 -include("esip_lib.hrl").
 -define(TCP_SEND_TIMEOUT, 10000).
+-ifdef(ERLANG_17).
+-record(state, {listeners = dict:new() :: dict:dict()}).
+-else.
 -record(state, {listeners = dict:new() :: dict()}).
+-endif.
 
 %%%===================================================================
 %%% API

$FreeBSD$

--- ../deps/esip/rebar.config.orig
+++ ../deps/esip/rebar.config
@@ -1,4 +1,5 @@
-{erl_opts, [{i, "include"},
+{erl_opts, [{platform_define, "^1[78]-", 'ERLANG_17'},
+	    {i, "include"},
 	    {i, "deps/p1_stun/include"},
 	    {i, "../p1_stun/include"}]}.
 

$FreeBSD$

--- ../deps/p1_stun/src/turn.erl.orig
+++ ../deps/p1_stun/src/turn.erl
@@ -56,6 +56,29 @@
 
 -type addr() :: {inet:ip_address(), inet:port_number()}.
 
+-ifdef(ERLANG_17).
+-record(state,
+	{sock_mod = gen_udp             :: gen_udp | gen_tcp | p1_tls,
+	 sock                           :: inet:socket() | p1_tls:tls_socket(),
+	 addr = {{0,0,0,0}, 0}          :: addr(),
+	 owner = self()                 :: pid(),
+	 username = <<"">>              :: binary(),
+	 realm = <<"">>                 :: binary(),
+	 key = {<<"">>, <<"">>, <<"">>} :: {binary(), binary(), binary()},
+	 server_name = <<"">>           :: binary(),
+	 permissions = ?DICT:new()      :: dict:dict(),
+	 channels = ?DICT:new()         :: dict:dict(),
+	 max_permissions                :: non_neg_integer() | atom(),
+	 relay_ip = {127,0,0,1}         :: inet:ip_address(),
+	 min_port = 49152               :: non_neg_integer(),
+	 max_port = 65535               :: non_neg_integer(),
+	 relay_addr                     :: addr(),
+	 relay_sock                     :: inet:socket(),
+	 last_trid                      :: non_neg_integer(),
+	 last_pkt = <<>>                :: binary(),
+	 seq = 1                        :: non_neg_integer(),
+	 life_timer                     :: reference()}).
+-else.
 -record(state,
 	{sock_mod = gen_udp             :: gen_udp | gen_tcp | p1_tls,
 	 sock                           :: inet:socket() | p1_tls:tls_socket(),
@@ -77,6 +100,7 @@
 	 last_pkt = <<>>                :: binary(),
 	 seq = 1                        :: non_neg_integer(),
 	 life_timer                     :: reference()}).
+-endif.
 
 %%====================================================================
 %% API

$FreeBSD$

--- ../deps/p1_stun/rebar.config.orig
+++ ../deps/p1_stun/rebar.config
@@ -1,4 +1,5 @@
-{erl_opts, [debug_info, {i, "include"}]}.
+{erl_opts, [{platform_define, "^1[78]-", 'ERLANG_17'},
+	    debug_info, {i, "include"}]}.
 
 {deps, [{p1_tls, ".*", {git, "git://github.com/processone/tls.git"}},
 	{p1_utils, ".*", {git, "git://github.com/processone/p1_utils.git"}}]}.

$FreeBSD$

--- ../deps/p1_stun/src/stun_listener.erl.orig
+++ ../deps/p1_stun/src/stun_listener.erl
@@ -36,7 +36,11 @@
          terminate/2, code_change/3]).
 
 -define(TCP_SEND_TIMEOUT, 10000).
+-ifdef(ERLANG_17).
+-record(state, {listeners = dict:new() :: dict:dict()}).
+-else.
 -record(state, {listeners = dict:new() :: dict()}).
+-endif.
 
 %%%===================================================================
 %%% API
